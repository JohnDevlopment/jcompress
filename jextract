#!/bin/bash

usage() {
    echo "$HELP" | head -n 2
}

die() {
    local msg="$1"
    local code=${2:-1}

    echo "$BASENAME: $msg" >&2
    exit $code
}

# usage: subflag <variable> <flag> [argument]
subflag() {
    local flag=${2:?missing flag}
    declare -n Var=${1:?missing varname}

    if bool $Var; then
	echo $flag $3
    else
	echo
    fi
    true
}

bool() {
    local val=${1:?no value}
    expr $val + 1 >/dev/null || die "invalid boolean value: $val"
    test $val -ne 0 && return `true`
    false
}

declare -r BASENAME=${0##*/}
declare -r VERSION="$BASENAME [VERSION]"

declare -r HELP=$(cat <<EOF
usage: $BASENAME [-lv] ARCHIVE
       $BASENAME [-h|-V]

Options:
       -h
       --help Print this help message and exit.

       -V
       --version
              Print the program version and exit.

       -l
       --list List the contents of ARCHIVE.

       -v
       --verbose
	      The output will be more detailed.
EOF
	)
DOVERBOSE=0

tmp=$(mktemp)
trap "rm $tmp" EXIT

# Parse commandline options
# If getopt returns true, noop, otherwise an error is generated
if temp=$(getopt -o 'hVlv' -l 'help,version,list,verbose' -- "$@" 2>$tmp); then
    # good
    :
else
    echo -e "$BASENAME:`cat $tmp`" >&2
    usage
    exit 1
fi
eval set -- "$temp"

while true; do
    case "$1" in
	-h|--help)
	    echo "$HELP"
	    exit
	    ;;
	-V|--version)
	    echo $VERSION
	    exit
	    ;;
	-l|--list)
	    DOLIST=1
	    shift
	    ;;
	-v|--verbose)
	    DOVERBOSE=1
	    shift
	    ;;
	--)
	    shift
	    break
	    ;;
	*)
	    echo '$BASENAME: internal error' >&2
	    exit 1
    esac
done

# Archive not provided
archive="$1"
if [ -z "$archive" ]; then
    echo "$BASENAME: missing filename" >&2
    usage
    exit 1
elif [ ! -f "$archive" ]; then
    echo "$BASENAME: $archive does not exist" >&2
    usage
    exit 1
fi

case "$archive" in
    *.zip)
	verbose=$(subflag DOVERBOSE -v)
	unzip $verbose "$archive"
	;;
    *.tar.gz|*.tgz)
	verbose=$(subflag DOVERBOSE v)
	if which unpigz > /dev/null; then
	    unpigz -c "$archive" | tar x${verbose}f - || die "failed to decompress $archive"
	else
	    tar xz${verbose}f "$archive"
	fi
	;;
    *.tar.bz2|*.tbz2)
	verbose=$(subflag DOVERBOSE v)
	if which pbzip2 > /dev/null; then
	    pbzip2 -cd "$archive" | tar x${verbose}f - || die "failed to decompress $archive"
	else
	    tar xj${verbose}f "$archive"
	fi
	;;
    *.tar.xz)
	verbose=$(subflag DOVERBOSE v)
	tar xJ${verbose}f "$archive"
	;;
    *.tar.7z)
	verbose=$(subflag DOVERBOSE v)
	7za x -so "$archive" | tar x${verbose}f -
	;;
    *.gz)
	cmd=gunzip
	which unpigz > /dev/null && cmd=unpigz
	verbose=$(subflag DOVERBOSE -v)
	$cmd $verbose "$archive"
	;;
    *.bz2)
	cmd=bunzip2
	which pbzip2 > /dev/null && cmd=pbzip2\ -d
	verbose=$(subflag DOVERBOSE -v)
	$cmd $verbose "$archive"
	;;
    *.tar)
	verbose=$(subflag DOVERBOSE v)
	tar x${verbose}f "$archive"
	;;
    *.7z)
	verbose=$(subflag DOVERBOSE -bb3)
	7z x $verbose "$archive"
	;;
    *)
	die "$archive not supported"
esac

echo "extracted $archive"
